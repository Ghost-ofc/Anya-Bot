const { Client, Message, MessageEmbed } = require('discord.js');
const ecoSchema = require(`${process.cwd()}/modelos/economia.js`);
const inventory = require("../../modelos/inventario.js")
const items = require("../../modelos/shopitems.js")
const Discord = require('discord.js')

module.exports = {
    name: "buy",
    aliases: ["Buy", "comprar"],
    desc: "Comprar cosas de la tienda",
    run: async(client, message, args) => {
        if(!args[0]) return message.channel.send(`‚ùå Por favor, especifique un art√≠culo para comprar! ¬°Escriba shop para obtener informaci√≥n! ¬°Y shop {item-name} para obtener m√°s informaci√≥n!`)
        const itemToBuy = args[0].toLowerCase();
        const amount = args[1] || 1;
        if(args[1] === "0") return message.channel.send(`‚ùå No puedes comprar este articulo **${args[0][0].toUpperCase()}${args[0].slice(1).toLowerCase()}** ¬°Debes comprar al menos 1 art√≠culo o simplemente usar buy (art√≠culo) para comprar ese art√≠culo 1 vez!`)
        if(args[1]) {
          if(isNaN(args[1])) return message.channel.send(`‚ùå Si desea comprar el art√≠culo en una cantidad espec√≠fica, ¬°entonces la cantidad debe ser un n√∫mero! ¬°Y ni una palabra/letra! ¬°Puede usar solo buy (art√≠culo) para comprar 1x (art√≠culo)!`)
        }
          const validItems = !!items.find((val) => val.item.toLowerCase() === itemToBuy);
        if(!validItems) return message.reply(`‚ùå ¬°El art√≠culo que quer√≠as comprar no es v√°lido!`)
        const itemEmoji = items.find((val) => (val.item.toLowerCase()) === itemToBuy).emoji;
  
        const itemPrice = items.find((val) => (val.item.toLowerCase()) === itemToBuy).price;
  
        const userBalance = await ecoSchema.findOne({userID: message.author.id});
        if(userBalance.dinero < itemPrice) return message.channel.send(`‚ùå ¬°No tienes suficiente saldo en tu billetera para comprar este art√≠culo! [item: **${itemToBuy}**]`)
  
        const params = {
          Guild: message.guild.id,
          User: message.author.id
        }
        inventory.findOne(params, async(err, data) => {
          if(data) {
            const hasItem = Object.keys(data.Inventory).includes(itemToBuy);
            if(!hasItem) {
              data.Inventory[itemToBuy] = amount;
              data.ItemEmoji[itemToBuy] = itemEmoji;
            } else {
              data.Inventory[itemToBuy] += parseInt(amount)
            }
            console.log(data);
            await inventory.findOneAndUpdate(params, data)
          } else {
            new inventory({
              Guild: message.guild.id,
              User: message.author.id,
              ItemEmoji: {
               [itemToBuy]: itemEmoji
              },
              Inventory: {
                [itemToBuy]: amount
              }
            }).save();
          }
          
          const arrayd = ["kenlake@gmail.com\nMohawk456", "yasminvialoux@gmail.com\nCh33ky10", "illedin1@gmail.com\nty94913450", "Sypa93@gmail.com\nMasej1993", "mpachana@gmail.com\nLucian1219", "pacoman757@gmail.com\naA1837924655", "cshin97@gmail.com\nKorea123", "Mdsmj27@gmail.com\nCasa99"]

          if(itemToBuy == "disney" || "Disney"){
          message.author.send({
            embeds: [new Discord.MessageEmbed()
            .setTitle('ùíûùìäùëíùìÉùìâùí∂ ùíπùíæùìàùìÉùëíùìé')
            .setDescription("Gracias por su compra, si ocurre algun error con la cuenta porfavor hagalo saber al staff. Recuerde que para que la cuenta le dure no debe modificar nada ‚ù§Ô∏è")
            .addField('Correo y Contrase√±a: ', `\`\`\`${arrayd[(Math.floor(Math.random() * arrayd.length))]}\`\`\``)
            .setColor('RANDOM')
            ]
        }).catch(() => {
            message.react("‚ùå")
            return message.reply("‚ùå **No te he podido enviar el DM de los detalles de la cuenta, ponganse en contacto con el staff para poder recibir su cuenta**")
        });}else{


        const arrayh = ["archang91@gmail.com\nXjxb7258!"]

        if(itemToBuy == "hbo" || "HBO"){
          message.author.send({
            embeds: [new Discord.MessageEmbed()
            .setTitle('ùíûùìäùëíùìÉùìâùí∂ ùêªùêµùí™ ùëÄùí∂ùìç')
            .setDescription("Gracias por su compra, si ocurre algun error con la cuenta porfavor hagalo saber al staff. Recuerde que para que la cuenta le dure no debe modificar nada ‚ù§Ô∏è")
            .addField('Correo y Contrase√±a: ', `\`\`\`${arrayh[(Math.floor(Math.random() * arrayh.length))]}\`\`\``)
            .setColor('RANDOM')
            ]
        }).catch(() => {
            message.react("‚ùå")
            return message.reply("‚ùå **No te he podido enviar el DM de los detalles de la cuenta, ponganse en contacto con el staff para poder recibir su cuenta**")
        });}}

        message.reply(`‚úÖ Has comprado con √©xito **${amount}x** **${itemToBuy[0].toUpperCase()}${itemToBuy.slice(1).toLowerCase()}** ${itemEmoji} for ${itemPrice} :dollar:!`)
        await ecoSchema.findOneAndUpdate({ User: message.author.id}, {
            $inc: {
                dinero: -itemPrice
            },
        })
        });

        
        
      } 

}
